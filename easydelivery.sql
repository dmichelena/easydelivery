-- MySQL Script generated by MySQL Workbench
-- Tue Mar 31 10:42:44 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema easydelivery
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema easydelivery
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `easydelivery` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `easydelivery` ;

-- -----------------------------------------------------
-- Table `easydelivery`.`rubro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`rubro` (
  `id_rubro` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `status` ENUM('activo','inactivo') NULL DEFAULT 'activo',
  PRIMARY KEY (`id_rubro`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easydelivery`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`user` (
  `id_user` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `auth_key` VARCHAR(45) NULL,
  `password_reset_token` VARCHAR(255) NULL,
  PRIMARY KEY (`id_user`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easydelivery`.`empresa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`empresa` (
  `id_empresa` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `ruc` VARCHAR(20) NULL,
  `telefono` VARCHAR(15) NULL,
  `direccion` VARCHAR(100) NULL,
  `id_rubro` INT NOT NULL,
  `status` ENUM('activo','inactivo') NULL DEFAULT 'activo',
  `id_user` INT NOT NULL,
  PRIMARY KEY (`id_empresa`),
  INDEX `fk_empresa_rubro1_idx` (`id_rubro` ASC),
  INDEX `fk_empresa_user1_idx` (`id_user` ASC),
  CONSTRAINT `fk_empresa_rubro1`
    FOREIGN KEY (`id_rubro`)
    REFERENCES `easydelivery`.`rubro` (`id_rubro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `easydelivery`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easydelivery`.`turno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`turno` (
  `id_turno` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `inicio` TIME NULL,
  `fin` TIME NULL,
  PRIMARY KEY (`id_turno`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easydelivery`.`local`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`local` (
  `id_local` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `direccion` VARCHAR(100) NULL,
  `latitud` VARCHAR(45) NULL,
  `longitud` VARCHAR(45) NULL,
  `telefono` VARCHAR(15) NULL,
  `zona_reparto_km` INT NULL,
  `id_empresa` INT NOT NULL,
  `id_turno` INT NOT NULL,
  `status` ENUM('activo','inactivo') NULL DEFAULT 'activo',
  `id_user` INT NOT NULL,
  PRIMARY KEY (`id_local`),
  INDEX `fk_local_empresa_idx` (`id_empresa` ASC),
  INDEX `fk_local_turno1_idx` (`id_turno` ASC),
  INDEX `fk_local_user1_idx` (`id_user` ASC),
  CONSTRAINT `fk_local_empresa`
    FOREIGN KEY (`id_empresa`)
    REFERENCES `easydelivery`.`empresa` (`id_empresa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_local_turno1`
    FOREIGN KEY (`id_turno`)
    REFERENCES `easydelivery`.`turno` (`id_turno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_local_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `easydelivery`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easydelivery`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`categoria` (
  `id_categoria` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `status` ENUM('activo','inactivo') NULL DEFAULT 'activo',
  PRIMARY KEY (`id_categoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easydelivery`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`producto` (
  `id_producto` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NULL,
  `foto` VARCHAR(100) NULL,
  `descipcion` TEXT NULL,
  `stock` INT NULL,
  `precio_unitario` DOUBLE(7,2) NULL,
  `precio_envio` DOUBLE(7,2) NULL,
  `id_categoria` INT NOT NULL,
  `id_local` INT NOT NULL,
  `status` ENUM('activo','inactivo') NOT NULL DEFAULT 'activo',
  `id_user` INT NOT NULL,
  PRIMARY KEY (`id_producto`),
  INDEX `fk_producto_local1_idx` (`id_local` ASC),
  INDEX `fk_producto_categoria1_idx` (`id_categoria` ASC),
  INDEX `fk_producto_user1_idx` (`id_user` ASC),
  CONSTRAINT `fk_producto_local1`
    FOREIGN KEY (`id_local`)
    REFERENCES `easydelivery`.`local` (`id_local`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producto_categoria1`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `easydelivery`.`categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producto_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `easydelivery`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easydelivery`.`transporte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`transporte` (
  `id_transporte` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `apellido` VARCHAR(45) NULL,
  `dni` VARCHAR(10) NULL,
  `domicilio` VARCHAR(100) NULL,
  `telefono` VARCHAR(15) NULL,
  `licencia_conducir` VARCHAR(15) NULL,
  `placa_vehiculo` VARCHAR(15) NULL,
  `id_turno` INT NOT NULL,
  `id_local` INT NOT NULL,
  `status` ENUM('activo','inactivo') NULL DEFAULT 'activo',
  `id_user` INT NOT NULL,
  PRIMARY KEY (`id_transporte`),
  INDEX `fk_transporte_turno1_idx` (`id_turno` ASC),
  INDEX `fk_transporte_local1_idx` (`id_local` ASC),
  INDEX `fk_transporte_user1_idx` (`id_user` ASC),
  CONSTRAINT `fk_transporte_turno1`
    FOREIGN KEY (`id_turno`)
    REFERENCES `easydelivery`.`turno` (`id_turno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transporte_local1`
    FOREIGN KEY (`id_local`)
    REFERENCES `easydelivery`.`local` (`id_local`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transporte_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `easydelivery`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easydelivery`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `apellido` VARCHAR(45) NULL,
  `correo` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `fecha_nacimiento` DATE NULL,
  `dni` VARCHAR(10) NULL,
  `status` ENUM('activo','inactivo') NULL DEFAULT 'activo',
  PRIMARY KEY (`id_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easydelivery`.`delivery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`delivery` (
  `id_delivery` INT NOT NULL AUTO_INCREMENT,
  `destino_latitud` VARCHAR(45) NULL,
  `destino_longitud` VARCHAR(45) NULL,
  `telefono` VARCHAR(45) NULL,
  `status` ENUM('activo','inactivo') NULL DEFAULT 'activo',
  `paso` ENUM('cancelado','enviado','en camino','en proceso','no enviado') NULL,
  `justificacion_cancelado` TEXT NULL,
  `id_transporte` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  `id_local` INT NOT NULL,
  PRIMARY KEY (`id_delivery`),
  INDEX `fk_delivery_transporte1_idx` (`id_transporte` ASC),
  INDEX `fk_delivery_usuario1_idx` (`id_usuario` ASC),
  INDEX `fk_delivery_local1_idx` (`id_local` ASC),
  CONSTRAINT `fk_delivery_transporte1`
    FOREIGN KEY (`id_transporte`)
    REFERENCES `easydelivery`.`transporte` (`id_transporte`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_delivery_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `easydelivery`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_delivery_local1`
    FOREIGN KEY (`id_local`)
    REFERENCES `easydelivery`.`local` (`id_local`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easydelivery`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`pedido` (
  `id_pedido` INT NOT NULL AUTO_INCREMENT,
  `cantidad` INT NULL,
  `precio_unitario` DOUBLE(7,2) NULL,
  `id_producto` INT NOT NULL,
  `id_delivery` INT NOT NULL,
  `status` ENUM('activo','inactivo') NULL DEFAULT 'activo',
  PRIMARY KEY (`id_pedido`),
  INDEX `fk_pedido_producto1_idx` (`id_producto` ASC),
  INDEX `fk_pedido_delivery1_idx` (`id_delivery` ASC),
  CONSTRAINT `fk_pedido_producto1`
    FOREIGN KEY (`id_producto`)
    REFERENCES `easydelivery`.`producto` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_delivery1`
    FOREIGN KEY (`id_delivery`)
    REFERENCES `easydelivery`.`delivery` (`id_delivery`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easydelivery`.`tracking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easydelivery`.`tracking` (
  `id_tracking` INT NOT NULL AUTO_INCREMENT,
  `latitud` VARCHAR(45) NULL,
  `longitud` VARCHAR(45) NULL,
  `id_delivery` INT NOT NULL,
  PRIMARY KEY (`id_tracking`),
  INDEX `fk_tracking_delivery1_idx` (`id_delivery` ASC),
  CONSTRAINT `fk_tracking_delivery1`
    FOREIGN KEY (`id_delivery`)
    REFERENCES `easydelivery`.`delivery` (`id_delivery`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
